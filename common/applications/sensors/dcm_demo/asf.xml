<asf xmlversion="1.0">
	<module type="application" id="sensors.dcm.demo" caption="Inertial Direction Matrix">
		<info type="keyword" value="technology">
			<keyword value="Sensors"/>
		</info>
		<info type="description" value="summary">
			This application obtains accelerometer sensor data in addition
			to angular rate change data from a gyroscope then uses these
			values to calculate rotations and a direction cosine matrix.
		</info>
		<build type="c-source" value="main.cpp"/>
		<!--
		Workaround: "Undefined reference to '__cxa_guard_acquire'" error message
		This is a linker error that will arise when local static objects are used.
		If the function can only be called by a single thread of execution, then
		use the compiler flag.  Otherwise, resource lock/unlock functions,
		__cxa_guard_acquire/__cxa_guard-release must be implemented.
		-->
		<build type="build-config" subtype="c++-compiler-flags" value="-fno-threadsafe-statics" toolchain="avrgcc"/>
		<build type="build-config" subtype="c++-compiler-flags" value="-fno-exceptions" toolchain="avrgcc"/>
		<build type="build-config" subtype="c++-compiler-flags" value="-fno-exceptions" toolchain="avr32gcc"/>
		<build type="build-config" subtype="c++-compiler-flags" value="-fno-implicit-templates" toolchain="avrgcc"/>
		<build type="build-config" subtype="c++-compiler-flags" value="-fno-implicit-templates" toolchain="avr32gcc"/>
		<build type="linker-config" subtype="flags" value="-u,vfprintf -lprintf_flt" toolchain="avrgcc"/>
		<device-support value="uc3"/>
		<device-support value="xmega"/>
		<require idref="common.services.sensors"/>
		<require idref="common.services.sensors.math"/>
		<info type="gui-flag" value="move-to-root"/>
	</module>
</asf>
